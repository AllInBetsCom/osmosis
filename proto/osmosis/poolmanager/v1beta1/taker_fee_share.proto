syntax = "proto3";
package osmosis.poolmanager.v1beta1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/osmosis-labs/osmosis/v25/x/poolmanager/types";

// TakerFeeShareAgreement represents the agreement between the Osmosis protocol
// and a bridge provider. For example, if the agreement specifies a 10% skim
// percent, this means 10% of the taker fees generated in a swap route
// containing the bridge provider's denom will be sent to the address specified
// in the skim_address field at the end of each epoch. These skim_percents are
// additive, so if three bridge providers have skim percents of 10%, 20%, and
// 30%, the total skim percent for the route will be 60%.
message TakerFeeShareAgreement {
  // denom is the denom that has a taker fee share agreement.
  string denom = 1 [ (gogoproto.moretags) = "yaml:\"denom\"" ];
  // skim_percent is the percentage of taker fees that will be skimmed for the
  // denom, in the event that the denom is included in the swap route.
  string skim_percent = 2 [
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.moretags) = "yaml:\"skim_percent\"",
    (gogoproto.nullable) = false
  ];
  // skim_address is the address belonging to the respective denom
  // that the skimmed taker fees will be sent to at the end of each epoch.
  string skim_address = 3 [ (gogoproto.moretags) = "yaml:\"skim_address\"" ];
}

// TakerFeeSkimAccumulator accumulates the total skimmed taker fees for each
// denom that has a taker fee share agreement.
message TakerFeeSkimAccumulator {
  // denom is the denom that has a taker fee share agreement.
  string denom = 1 [ (gogoproto.moretags) = "yaml:\"denom\"" ];
  // skimmed_taker_fees is the total skimmed taker fees for the denom.
  repeated cosmos.base.v1beta1.Coin skimmed_taker_fees = 2 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.moretags) = "yaml:\"skimmed_taker_fees\"",
    (gogoproto.nullable) = false
  ];
}

message AlloyContractTakerFeeShareState {
  string contract_address = 1
      [ (gogoproto.moretags) = "yaml:\"contract_address\"" ];
  repeated TakerFeeShareAgreement taker_fee_share_agreements = 2 [
    (gogoproto.moretags) = "yaml:\"taker_fee_share_agreements\"",
    (gogoproto.nullable) = false
  ];
}
